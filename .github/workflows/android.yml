name: Android Build with Buildozer
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean buildozer.spec
        run: |
          awk '/^\[app\]/ && !found {found=1; print; next} /^\[app\]/ && found {next} {print}' buildozer.spec > temp.spec
          awk -F= '!seen[$1]++' temp.spec > buildozer.spec
          rm temp.spec

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              git zip unzip openjdk-17-jdk \
              python3-pip autoconf libtool \
              pkg-config zlib1g-dev libncurses6 \
              libtinfo6 libffi-dev libssl-dev \
              build-essential python3-dev

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip wheel
          pip install cython==0.29.33
          pip install buildozer
          pip install --force-reinstall git+https://github.com/kivy/python-for-android.git@develop

      - name: Create Buildozer directories
        run: |
          mkdir -p .buildozer/android/platform/python-for-android
          mkdir -p .buildozer/android/platform/build

      - name: Set up Android SDK/NDK
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ~/.android/cmdline-tools
          mv ~/.android/cmdline-tools/cmdline-tools ~/.android/cmdline-tools/latest

          echo "ANDROID_SDK_ROOT=$HOME/.android" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/.android/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "PATH=$HOME/.android/cmdline-tools/latest/bin:$HOME/.android/platform-tools:$PATH" >> $GITHUB_ENV

          yes | ~/.android/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          ~/.android/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"

      - name: Configure buildozer.spec
        run: |
          for setting in android.ndk_path android.sdk_path p4a.branch requirements; do
            sed -i "/^$setting/d" buildozer.spec
          done

          awk '1; /^\[app\]/ && !added {
            print "android.ndk_path = $ANDROID_NDK_HOME";
            print "android.sdk_path = $ANDROID_SDK_ROOT";
            print "p4a.branch = develop";
            print "requirements = python3,kivy,cython==0.29.33";
            print "log_level = 2";
            added=1
          }' buildozer.spec > temp.spec && mv temp.spec buildozer.spec

      - name: Build APK with debug logging
        run: |
          buildozer android clean
          buildozer -v android debug 2>&1 | tee build.log
          
          # Create bin directory if it doesn't exist
          mkdir -p bin
          
          # Find and copy APK to bin directory
          find .buildozer -name "*.apk" -exec cp {} bin/ \;
          
          # Verify APK exists
          if [ -z "$(ls -A bin/*.apk 2>/dev/null)" ]; then
            echo "::error::No APK file found after build!"
            echo "=== Build Log Errors ==="
            grep -i error build.log
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: bin/*.apk
          if-no-files-found: error

      - name: Show build summary
        run: |
          echo "=== APK Build Successful ==="
          echo "APK file(s) created:"
          ls -la bin/*.apk
          echo "Download the APK from the Artifacts section above"
