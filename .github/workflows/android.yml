name: Android Build with Buildozer
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              git zip unzip openjdk-17-jdk \
              python3-pip autoconf libtool \
              pkg-config zlib1g-dev libncurses6 \
              libtinfo6 libffi-dev libssl-dev \
              build-essential python3-dev

      - name: Install Buildozer with explicit p4a
        run: |
          python -m pip install --upgrade pip wheel
          pip install cython==0.29.33
          pip install buildozer
          pip install --force-reinstall git+https://github.com/kivy/python-for-android.git@develop
          mkdir -p ~/.buildozer/android/platform/python-for-android

      - name: Set up Android SDK
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg

          # Download working cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ~/.android/cmdline-tools
          mv ~/.android/cmdline-tools/cmdline-tools ~/.android/cmdline-tools/latest

          # Set environment variables
          echo "ANDROID_SDK_ROOT=$HOME/.android" >> $GITHUB_ENV
          echo "PATH=$HOME/.android/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

          # Install Android tools
          yes | ~/.android/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          ~/.android/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;30.0.3"
          ~/.android/cmdline-tools/latest/bin/sdkmanager "ndk;23.1.7779620"
          echo "ANDROID_NDK_HOME=$HOME/.android/ndk/23.1.7779620" >> $GITHUB_ENV

      - name: Initialize Buildozer
        run: |
          mkdir -p .buildozer/android/platform/python-for-android
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          buildozer checkconfig

      - name: Build APK
        run: |
          mkdir -p bin
          buildozer -v android clean
          buildozer -v android debug 2>&1 | tee build.log
          
          # Verify APK exists
          if [ ! -f bin/*.apk ]; then
            echo "=== Build Log Errors ==="
            grep -i error build.log
            echo "=== Searching for APK ==="
            find . -name "*.apk" -exec ls -la {} \;
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: bin/*.apk
          if-no-files-found: error
