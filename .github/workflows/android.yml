name: Android Build with Buildozer
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean and validate buildozer.spec
        run: |
          # Remove duplicate sections and keys
          awk '/^\[app\]/ && !found {found=1; print; next} /^\[app\]/ && found {next} {print}' buildozer.spec > temp.spec
          awk -F= '!seen[$1]++' temp.spec > buildozer.spec
          rm temp.spec

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              git zip unzip openjdk-17-jdk \
              python3-pip autoconf libtool \
              pkg-config zlib1g-dev libncurses6 \
              libtinfo6 libffi-dev libssl-dev \
              build-essential python3-dev

      - name: Install Python build dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install cython==0.29.33
          pip install buildozer
          pip install --force-reinstall git+https://github.com/kivy/python-for-android.git@develop

      - name: Create required directories
        run: |
          mkdir -p .buildozer/android/platform/python-for-android
          mkdir -p .buildozer/android/platform/build

      - name: Set up Android SDK/NDK
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg

          # Install Android Command Line Tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ~/.android/cmdline-tools
          mv ~/.android/cmdline-tools/cmdline-tools ~/.android/cmdline-tools/latest

          # Set environment variables
          echo "ANDROID_SDK_ROOT=$HOME/.android" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/.android/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "PATH=$HOME/.android/cmdline-tools/latest/bin:$HOME/.android/platform-tools:$PATH" >> $GITHUB_ENV

          # Accept licenses and install components
          yes | ~/.android/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          ~/.android/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"

      - name: Configure buildozer.spec
        run: |
          # Clean existing configurations
          for setting in android.ndk_path android.sdk_path p4a.branch requirements; do
            sed -i "/^$setting/d" buildozer.spec
          done

          # Add essential configurations
          awk '1; /^\[app\]/ && !added {
            print "android.ndk_path = $ANDROID_NDK_HOME";
            print "android.sdk_path = $ANDROID_SDK_ROOT";
            print "p4a.branch = develop";
            print "requirements = python3,kivy,cython==0.29.33";
            print "log_level = 2";
            added=1
          }' buildozer.spec > temp.spec && mv temp.spec buildozer.spec

      - name: Full environment verification
        run: |
          echo "=== Python Environment ==="
          python --version
          pip list
          echo "=== Android Tools ==="
          ls $ANDROID_SDK_ROOT/build-tools
          ls $ANDROID_NDK_HOME
          echo "=== Buildozer Configuration ==="
          buildozer --version
          cat buildozer.spec

      - name: Build with full debugging
        run: |
          buildozer android clean
          buildozer -v android debug 2>&1 | tee build.log
          echo "=== Build Log Summary ==="
          grep -i error build.log || echo "No errors found in build log"
